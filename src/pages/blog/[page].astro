---
// Paginate same list of `{ astronaut }` objects as the previous example
export function getStaticPaths({ paginate }) {
    const posts = Object.values(
        import.meta.glob("../posts/*.md", { eager: true }),
    );
    const astronautPages = posts.map((post) => ({
        astronaut: post.frontmatter.title,
        url: post.url,
    }));
    // Sort by publication date
    astronautPages.sort((a, b) => {
        return (
            new Date(b.publishedDate).getTime() -
            new Date(a.publishedDate).getTime()
        );
    });

    // Generate pages from our array of astronauts, with 2 to a page
    return paginate(astronautPages, { pageSize: 2 });
}
const { page } = Astro.props;
---

<h1>Page {page.currentPage}</h1>
<ul>
    {page.data.map(({ astronaut }) => <li>{astronaut}</li>)}
</ul>
{page.url.first ? <a href={page.url.first}>First</a> : null}
{page.url.prev ? <a href={page.url.prev}>Previous</a> : null}
{page.url.next ? <a href={page.url.next}>Next</a> : null}
{page.url.last ? <a href={page.url.last}>Last</a> : null}
